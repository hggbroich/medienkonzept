# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
imports:
    - { resource: version.yaml }

parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # SESSIONS
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            $pdoOrDsn: '%env(DATABASE_URL)%'

    # DARK MODE:
    SchulIT\CommonBundle\DarkMode\DarkModeManagerInterface:
        class: App\DarkMode\DarkModeManager

    # SAML
    LightSaml\SpBundle\Security\User\UsernameMapperInterface:
        alias: lightsaml_sp.username_mapper.simple

    LightSaml\Store\Id\IdStoreInterface:
        class: SchulIT\CommonBundle\Store\IdStore

    SchulIT\CommonBundle\Command\CreateCertificateCommand:
        arguments:
            $types:
                saml:
                    keyFile: '%sp_cert_key%'
                    certFile: '%sp_cert_file%'

    # MENU
    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: mainMenu }

    App\Menu\ServicesMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: servicesMenu, alias: servicesMenu }

    App\Menu\UserMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: userMenu, alias: userMenu }

    App\Menu\AdminMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: adminMenu, alias: adminMenu }

    App\Menu\SettingsMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: settingsMenu, alias: settingsMenu }

    SchulIT\CommonBundle\Menu\Voter:
        tags:
            - { name: knp_menu.voter }
